import random
import string
from faker import Faker

fake = Faker(use_weighting=False)

customer_ids_pool = []

def set_customer_ids_pool(ids: list):
    global customer_ids_pool
    customer_ids_pool = ids

def random_string(len=15):
    lst = [random.choice(string.hexdigits) for n in range(len)]
    return "".join(lst)

def random_account_num(len=12):
    acct_num = [random.choice(string.digits) for n in range(len)]
    return "".join(acct_num)

def random_eid_num(len=8):
    eid_num = [random.choice(string.digits) for n in range(len)]
    return "".join(eid_num)

def number():
    return random.randrange(-1000, 1000)

def small_positive_integer():
    return random.randrange(1, 100)

def positive_integer():
    return random.randrange(1, 1000)

def number_employees():
    return random.randrange(1, 10000)

def long_text():
    return fake.paragraph(nb_sentences=1)

def product_name():
    return fake.text(max_nb_chars=30)

def full_name():
    return "{} {}".format(fake.first_name(), fake.last_name())

def sex():
    return random.choice(['Male', 'Female'])

def department():
    return random.choice([
        "Marketing & Proposals Department",
        "Sales Department",
        "Project Department",
        "Designing Department",
        "Production Department",
        "Maintenance Department",
        "Store Department",
        "Procurement Department",
        "Quality Department",
        "Inspection Department",
        "Packaging Department",
        "Finance Department",
        "Dispatch Department",
        "Account Department",
        "Research & Development Department",
        "Information Technology Department",
        "Human Resource Department",
        "Security Department",
        "Administration Department"
    ])

def industry():
    return random.choice([
        "Accounting", "Airlines / Aviation", "Alternative Medicine", "Animation",
        "Apparel / Fashion", "Architecture / Planning", "Arts / Crafts", "Automotive",
        "Warehousing", "Wholesale", "Wine / Spirits", "Venture Capital / VC"
    ])

# ðŸ”· Order-specific generators

def order_status():
    return random.choice(["Pending", "Shipped", "Delivered", "Returned", "Cancelled"])

def sales_channel():
    return random.choice(["Online", "Retail"])

def currency():
    return random.choice(["USD", "EUR"])

def payment_method():
    return random.choice(["Credit Card", "PayPal", "Wire Transfer", "Gift Card"])

def shipping_method():
    return random.choice(["Standard", "Express", "Two-Day", "Overnight"])

def customer_id_from_pool():
    return random.choice(customer_ids_pool) if customer_ids_pool else None

# ðŸ”· Map all generators
TYPES_TO_GENERATORS = {
    'id': random_string,
    'first_name': fake.first_name,
    'last_name': fake.last_name,
    'full_name': full_name,
    'company': fake.company,
    'industry': industry,
    'business_department': department,
    'company_desc': fake.catch_phrase,
    'company_number_employees': number_employees,
    'city': fake.city,
    'country': fake.country,
    'sex': sex,
    'ean': fake.ean,
    'url': fake.url,
    'email': fake.email,
    'business_email': fake.company_email,
    'website': fake.url,
    'job': fake.job,
    'number': number,
    'small_positive_integer': small_positive_integer,
    'positive_integer': positive_integer,
    'product_name': product_name,
    'date': fake.date,
    'year': fake.year,
    'datetime': fake.date_time,
    'date_this_decade': fake.date_this_decade,
    'date_of_birth': fake.date_of_birth,
    'long_text': long_text,
    'address': fake.address,
    'phone': fake.phone_number,
    'id_number': random_account_num,
    'eid_number': random_eid_num,
    'np_ssn': fake.ssn,
    'password': fake.password,

    # âœ… Orders specific
    'order_status': order_status,
    'sales_channel': sales_channel,
    'currency': currency,
    'payment_method': payment_method,
    'shipping_method': shipping_method,
    'customer_id': customer_id_from_pool,   # dynamic from csv
}



from faker import Faker
import random
import string

fake = Faker()
customer_ids_pool = []

def set_customer_ids_pool(ids: list):
    global customer_ids_pool
    customer_ids_pool = ids

def random_customer_id():
    return random.choice(customer_ids_pool) if customer_ids_pool else None

def order_id():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=12))

def sales_channel():
    return random.choice(['Online', 'Retail'])

def currency():
    return random.choice(['USD', 'EUR'])

def payment_method():
    return random.choice(['Credit Card', 'Debit Card', 'PayPal', 'Wire Transfer', 'Cash on Delivery'])

def shipping_method():
    return random.choice(['Standard', 'Express', 'Overnight', 'Pickup'])

def order_status():
    return random.choice(['Processing', 'Shipped', 'Delivered', 'Cancelled', 'Returned'])

def order_priority():
    return random.choice(['Low', 'Medium', 'High', 'Critical'])

def referral_source():
    return random.choice([
        'Direct', 'Social Media', 'Email Campaign',
        'Paid Ads', 'Affiliate', 'Organic Search', 'Referral'
    ])

def device_type():
    return random.choice([
        'Desktop', 'Laptop', 'Tablet', 'Smartphone', 'Smart TV'
    ])

def browser():
    return random.choice([
        'Chrome', 'Firefox', 'Safari', 'Edge', 'Opera', 'Brave'
    ])

def number():
    return random.randint(1, 1000)

def float_number():
    return round(random.uniform(10.0, 1000.0), 2)

def discount_code():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

def product_id():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))

def product_name():
    return fake.catch_phrase()

def quantity():
    return random.randint(1, 20)

def unit_price():
    return round(random.uniform(5.0, 500.0), 2)

def total_price():
    # just a placeholder â€” you could calculate unit_price * quantity
    return round(random.uniform(20.0, 5000.0), 2)

def country():
    return fake.country()

def city():
    return fake.city()

def address():
    return fake.address()

def postal_code():
    return fake.postcode()

def phone():
    return fake.phone_number()

def email():
    return fake.email()

def order_date():
    return fake.date_this_decade()

def shipment_date():
    return fake.date_this_decade()

def delivery_date():
    return fake.date_this_decade()

def return_date():
    return fake.date_this_decade()

def tracking_number():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))

TYPES_TO_GENERATORS = {
    'customer_id': random_customer_id,
    'order_id': order_id,
    'sales_channel': sales_channel,
    'currency': currency,
    'payment_method': payment_method,
    'shipping_method': shipping_method,
    'order_status': order_status,
    'order_priority': order_priority,
    'referral_source': referral_source,
    'device_type': device_type,
    'browser': browser,
    'product_id': product_id,
    'product_name': product_name,
    'quantity': quantity,
    'unit_price': unit_price,
    'total_price': total_price,
    'country': country,
    'city': city,
    'address': address,
    'postal_code': postal_code,
    'phone': phone,
    'email': email,
    'order_date': order_date,
    'shipment_date': shipment_date,
    'delivery_date': delivery_date,
    'return_date': return_date,
    'tracking_number': tracking_number,
    'number': number,
    'float_number': float_number,
    'discount_code': discount_code,
}
