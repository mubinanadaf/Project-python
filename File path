def data_load_bq_bq(**kwargs):
    try:
        ti = kwargs['task_instance']
        target_dataset = ti.xcom_pull(task_ids='run_time_variables', key='target_dataset')
        target_name = ti.xcom_pull(task_ids='run_time_variables', key='target_name')
        staging_dataset = ti.xcom_pull(task_ids='run_time_variables', key='sfr_outbound_dataset')
        staging_tables = ti.xcom_pull(task_ids='dimc_pre_check', key='staging_tables')
        sql_file_path = ti.xcom_pull(task_ids='run_time_variables', key='sql_file_path')

        if sql_file_path:
            # Load SQL query from file
            from google.cloud import storage
            import tempfile

            storage_client = storage.Client()
            bucket_name, blob_path = sql_file_path.replace("gs://", "").split("/", 1)
            bucket = storage_client.bucket(bucket_name)
            blob = bucket.blob(blob_path)

            # Download and read SQL content
            sql_query = blob.download_as_text()

            logging.info(f"Executing custom SQL from: {sql_file_path}")
            logging.info(f"SQL Query:\n{sql_query}")

            data_load_bq_bq_task = BigQueryExecuteQueryOperator(
                task_id='data_load_bq_bq_task',
                sql=sql_query,
                use_legacy_sql=False
            )
        else:
            # Default logic: insert data from staging tables
            union_query = ' UNION ALL '.join(
                [f"SELECT * FROM `{staging_dataset}.{table}`" for table in staging_tables]
            )
            insert_query = f"INSERT INTO `{target_dataset}.{target_name}` {union_query}"

            logging.info(f"Executing default INSERT INTO query:\n{insert_query}")

            data_load_bq_bq_task = BigQueryExecuteQueryOperator(
                task_id='data_load_bq_bq_task',
                sql=insert_query,
                use_legacy_sql=False
            )

        data_load_bq_bq_task.execute(context=kwargs)

    except Exception as e:
        logging.info(f"‚ùå Exception occurred while loading data: {str(e)}")
        sys.exit(1)
