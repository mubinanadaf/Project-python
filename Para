Got it üëç Let‚Äôs make your BQ-to-BQ loader SQL files parameterized so you can dynamically inject values (like dataset or table names) from the config file.


---

1. Define placeholder(s) in your SQL file

In your .sql file, instead of hardcoding dataset/table names, use placeholders.
For example:

SELECT 
  customer_id,
  name,
  email,
  address
FROM `{SOURCE_DATASET}.{SOURCE_TABLE}`

Here {SOURCE_DATASET} and {SOURCE_TABLE} are placeholders.


---

2. Update your config_bq_bq.json

Add values that will replace placeholders:

{
  "bqtobqobjectsConfigFileVersion": "v1",
  "bqtobqobjects": {
    "object_1": {
      "source": "sfr_outbound_dataset",
      "source_name": "demo_bq_bq_customers",
      "target": "bq_target_dataset",
      "target_name": "demo_bq_bq_customer_sales_summary",
      "sql_file_path": "dags/queries/demo_bq_bq_customer_sales_summary.sql",
      "parameters": {
        "SOURCE_DATASET": "sfr_outbound_dataset",
        "SOURCE_TABLE": "demo_bq_bq_customers"
      }
    }
  }
}


---

3. Enhance odin_config_file_validation

Capture parameters if present:

object_config = {
    ...
    "sql_file_path": obj.get("sql_file_path", None),
    "parameters": obj.get("parameters", {})  # new line
}


---

4. Modify data_load_bq_bq

Before executing, replace placeholders in the SQL string:

# Load SQL file content from GCS or local path (as you already do)
sql_query = blob.download_as_text()

# Apply parameter substitution
parameters = kwargs['ti'].xcom_pull(task_ids='run_time_variables', key='parameters') or {}
for key, value in parameters.items():
    sql_query = sql_query.replace(f"{{{key}}}", value)

# Final query
insert_query = sql_query


---

5. Example Result

If SQL file contains:

SELECT * FROM `{SOURCE_DATASET}.{SOURCE_TABLE}`

After substitution, it becomes:

SELECT * FROM `sfr_outbound_dataset.demo_bq_bq_customers`


---

‚úÖ This way you can pass any dataset/table name from config and reuse the same SQL template for multiple pipelines.


---

Would you like me to rewrite your current data_load_bq_bq function with these parameter replacement changes included, so you can just plug it in?

