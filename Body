# REPLACE THE BODY OF test_create_fileset_function WITH THIS ↓
    import src.odin.odin_corpsec_catalog_creation_composer as odin_comp

    # Airflow Variable.get mock (same style)
    from airflow.models import Variable
    Variable.get = mock.MagicMock(side_effect=lambda key, deserialize_json=False: {
        "app_common_variables_corpsec": {},
        "app_resource_variables_corp_sec": {
            "gcs_outbound_bucket": "test_bucket",
            "DRT_ID": "test_drt_id",
            "bq_target_dataset": "project:dataset",
        }
    }[key])

    # Return values (match your working happy path)
    mock_get_pii_config.side_effect = [
        {"key1": "value1"},
        {"key2": "value2"},
    ]
    mock_get_schema_files_list.return_value = ["file1", "file2"]
    mock_create_entry_group.return_value.name = "test_entry_group"
    mock_create_tag_templates.return_value = ("test_entry_tag_template", "test_col_tag_template")
    mock_get_schema_from_file.return_value = {"schema": "test_schema"}
    mock_create_entry.return_value = "test_entry_name"

    # DataCatalogClient mock
    client_instance = datacatalog_v1.DataCatalogClient.return_value
    client_instance.create_tag.return_value = None

    # ACT (no assertLogs here — we assert against the patched LOGGER)
    odin_comp.create_fileset()

    # ASSERTIONS — happy path should log INFO and not WARN
    mock_logger.info.assert_called()
    mock_logger.warning.assert_not_called()

    # Optional: keep your existing call assertions (helps Sonar too)
    mock_get_pii_config.assert_any_call("data_catalogue/odin_corpsec_inputd_avro_info.json")
    mock_get_pii_config.assert_any_call("data_catalogue/odin_pii_info.json")
    mock_get_schema_files_list.assert_called_once()
    mock_create_entry_group.assert_called_once()
    mock_create_tag_templates.assert_called_once()
    mock_get_schema_from_file.assert_any_call("schemas/dataset_table_schemas", "file1")
    mock_get_schema_from_file.assert_any_call("schemas/dataset_table_schemas", "file2")
    mock_create_entry.assert_called()
    mock_assign_pii_tags.assert_called()
    client_instance.create_tag.assert_called()
